{"$message_type":"diagnostic","message":"unused imports: `BinaryHeap`, `cmp::Ordering`, and `self`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":10,"byte_end":23,"line_start":1,"line_end":1,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"use std::{cmp::Ordering, collections::{BinaryHeap, HashMap, VecDeque}, fs, io::{self, Read}, iter::once, u32};","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":39,"byte_end":49,"line_start":1,"line_end":1,"column_start":40,"column_end":50,"is_primary":true,"text":[{"text":"use std::{cmp::Ordering, collections::{BinaryHeap, HashMap, VecDeque}, fs, io::{self, Read}, iter::once, u32};","highlight_start":40,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":80,"byte_end":84,"line_start":1,"line_end":1,"column_start":81,"column_end":85,"is_primary":true,"text":[{"text":"use std::{cmp::Ordering, collections::{BinaryHeap, HashMap, VecDeque}, fs, io::{self, Read}, iter::once, u32};","highlight_start":81,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":10,"byte_end":25,"line_start":1,"line_end":1,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"use std::{cmp::Ordering, collections::{BinaryHeap, HashMap, VecDeque}, fs, io::{self, Read}, iter::once, u32};","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/main.rs","byte_start":39,"byte_end":51,"line_start":1,"line_end":1,"column_start":40,"column_end":52,"is_primary":true,"text":[{"text":"use std::{cmp::Ordering, collections::{BinaryHeap, HashMap, VecDeque}, fs, io::{self, Read}, iter::once, u32};","highlight_start":40,"highlight_end":52}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/main.rs","byte_start":80,"byte_end":86,"line_start":1,"line_end":1,"column_start":81,"column_end":87,"is_primary":true,"text":[{"text":"use std::{cmp::Ordering, collections::{BinaryHeap, HashMap, VecDeque}, fs, io::{self, Read}, iter::once, u32};","highlight_start":81,"highlight_end":87}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `BinaryHeap`, `cmp::Ordering`, and `self`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:1:11\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::{cmp::Ordering, collections::{BinaryHeap, HashMap, VecDeque}, fs, io::{self, Read}, iter::once, u32};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `Read`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":86,"byte_end":90,"line_start":1,"line_end":1,"column_start":87,"column_end":91,"is_primary":true,"text":[{"text":"use std::{cmp::Ordering, collections::{BinaryHeap, HashMap, VecDeque}, fs, io::{self, Read}, iter::once, u32};","highlight_start":87,"highlight_end":91}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `Read`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:1:87\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::{cmp::Ordering, collections::{BinaryHeap, HashMap, VecDeque}, fs, io::{self, Read}, iter::once, u32};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `x`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":1708,"byte_end":1709,"line_start":59,"line_end":59,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"        let x: u32 = nmi.next().unwrap().parse().unwrap();","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1708,"byte_end":1709,"line_start":59,"line_end":59,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"        let x: u32 = nmi.next().unwrap().parse().unwrap();","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":"_x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `x`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:59:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m59\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let x: u32 = nmi.next().unwrap().parse().unwrap();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_x`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"3 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 3 warnings emitted\u001b[0m\n\n"}
